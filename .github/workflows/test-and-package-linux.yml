# (c) Massachusetts Institute of Technology 2015-2018
# (c) Brian Teague 2018-2022
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 2 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

name: Test and package on Linux
on: [push]
jobs:
  check-environment:
    name: Make sure environment.yml and meta.yaml are the same
    runs-on: ubuntu-22.04
    steps:
    
    - name: Check out repo
      uses: actions/checkout@v4.2.2   
      
    - name: Compare meta.yaml and environment.yml
      run: |
        gawk -f package/make_environment.awk package/conda_recipes/cytoflow/meta.yaml | gawk -f package/parse_environment.awk > env_meta
        gawk -f package/parse_environment.awk environment.yml > env_mine
        diff -u env_meta env_mine
      
  test-on-linux:
    name: Run nose2 on linux runner
    needs: check-environment
    runs-on: ubuntu-22.04
    defaults:
      run:
        shell: bash -l {0}
    steps:
    - name: Check out repo
      uses: actions/checkout@v4.2.2  
      with:
        submodules: true
      
    - name: Setup Miniconda
      uses: conda-incubator/setup-miniconda@v3.2.0
      with:
        auto-update-conda: true
        channels: cytoflow
        activate-environment: cytoflow
        environment-file: environment.yml
         
    - name: Configure conda
      run: |
        conda install --yes --quiet swig
    
    - name: Install the package
      run: |
        pip install --editable .
        
    - name: Install nose2
      run: |
        pip install nose2
        
    - name: Run cytoflow tests
      env:
        OMP_NUM_THREADS: 1
      run: |
        nose2 -v -c package/nose2.cfg cytoflow.tests

#     - name: Run cytoflowgui tests
#       env:
#         OMP_NUM_THREADS: 1
#       run: |
#         nose2 -v -c package/nose2.cfg cytoflowgui.tests -GUI    

#    - name: GUI smoketest
#      run: |  
#        python --version
#        timeout -k 10 60s xvfb-run python cytoflowgui/run.py cytoflowgui/tests/startup-test.flow

    
  build-linux-conda-package:
    name: Build linux conda package
    runs-on: ubuntu-22.04
    needs: test-on-linux
    defaults:
      run:
        shell: bash -l {0}
    steps:
    - name: Check out repo
      uses: actions/checkout@v4.2.2
      with:
        fetch-depth: 0
        submodules: true
      
    - name: Setup Miniconda
      uses: conda-incubator/setup-miniconda@v3.2.0
      with:
        auto-update-conda: true
        channels: cytoflow
        activate-environment: cytoflow
        environment-file: environment.yml
        
    - name: Configure conda
      run: |
        conda install --yes --quiet swig anaconda-client conda-build conda-verify
        
    - name: Build conda package
#       continue-on-error: true
      run: |
        conda render package/conda_recipes/cytoflow
        conda build --quiet package/conda_recipes/cytoflow
        
#     - name: Zip up the build directory
#       run: |
#         zip -r conda-build.zip /usr/share/miniconda/envs/cytoflow/conda-bld/
#         
#     - name: Save the contents of the conda-build folder as artifacts
#       uses: actions/upload-artifact@v4.3.6
#       with:
#         name: linux-conda-build-dir
#         retention-days: 7
#         path: conda-build.zip
        
    - name: Move conda package into the dist folder
      run: |
        mkdir dist
        mv `conda build --output package/conda_recipes/cytoflow/` dist
        
    - name: Copy environment.yml into the dist folder
      run: |
        cp environment.yml dist/
        
    - name: List dist/
      run: ls dist/
      
    - name: Save the contents of the dist/ folder as artifacts
      uses: actions/upload-artifact@v4.3.6
      with:
        name: linux-conda-package
        retention-days: 7
        path: dist/*

  build-linux-wheels:
    name: Build source dist, linux wheels
    needs: test-on-linux
    runs-on: ubuntu-22.04
    defaults:
      run:
        shell: bash -l {0}
    steps:
    - name: Check out repo
      uses: actions/checkout@v4.2.2  
      with:
        fetch-depth: 0
        submodules: true
      
    - name: Setup Miniconda
      uses: conda-incubator/setup-miniconda@v3.2.0
      with:
        auto-update-conda: true
        channels: cytoflow
        activate-environment: cytoflow
        environment-file: environment.yml
         
    - name: Configure conda
      run: |
        conda install --yes --quiet swig pip
        
    - name: Install packaging deps
      run: |
        pip install build
            
    - name: Install package locally
      run: |
        pip install --editable .
        
    - name: Build source dist
      run: |
        python -m build --sdist
        
    - name: Build wheel
      run: |
        python -m build --wheel
        
    - name: Move C++ extensions into the dist folder
      run: |
        cp `find build | grep "\.so$"` dist/
        
    - name: List dist/
      run: ls dist/
      
    - name: Save the contents of the dist/ folder as artifacts
      uses: actions/upload-artifact@v4.3.6
      with:
        name: linux-wheels
        retention-days: 7
        path: dist/*   
        
  build-linux-oneclick:
    name: Build linux one-click
    needs: test-on-linux
    runs-on: ubuntu-22.04
    defaults:
      run:
        shell: bash -l {0}
    steps:
    - name: Check out repo
      uses: actions/checkout@v4.2.2  
      with:
        fetch-depth: 0
        submodules: true
      
    - name: Query git tag
      id: tag
      run: echo "GIT_TAG=$(git describe --tags)" >> $GITHUB_ENV
        
    - name: Show Tag
      id: display
      run: |
        echo "Output from Find Tag: ${GIT_TAG}"
      
    - name: Setup Miniconda
      uses: conda-incubator/setup-miniconda@v3.2.0
      with:
        auto-update-conda: true
        activate-environment: cytoflow
        environment-file: environment.yml
         
    - name: Configure conda
      run: |
        conda install --yes --quiet swig
        
    - name: Install package locally
      run: |
        pip install --editable .
        
    - name: Install packaging deps
      run: |
        conda install --yes --quiet sphinx pandoc
        pip install pyinstaller
        
    - name: Build embedded help docs
      run: |
        sphinx-build docs/user_manual/reference cytoflowgui/help
        
    - name: Build GUI binary
      run: |
        pyinstaller --log-level=DEBUG package/pyinstaller.spec
        
#    - name: GUI binary smoketest
#      run: |
#        xvfb-run dist/cytoflow/cytoflowgui ../../cytoflowgui/tests/startup-test.flow

    - name: Rename directory and make a tarball
      run: |
        cd dist
        mv cytoflow cytoflow-${GIT_TAG}
        tar -cjf cytoflow-gui-${GIT_TAG}.linux_x86-64.tar.bz2 cytoflow-${GIT_TAG}
        rm -rf cytoflow-${GIT_TAG}
        
    - name: List dist/
      run: ls dist/
      
    - name: Save the contents of the dist/ folder as artifacts
      uses: actions/upload-artifact@v4.3.6
      with:
        name: linux-oneclick
        path: dist/*
        retention-days: 7
        
        
  build-examples:
    name: Zip up examples
    needs: test-on-linux
    runs-on: ubuntu-22.04
    steps:
    - name: Check out repo
      uses: actions/checkout@v4.2.2  
      with:
        fetch-depth: 0
        submodules: true
      
    - name: Query git tag
      id: tag
      run: echo "GIT_TAG=$(git describe --tags)" >> $GITHUB_ENV
        
    - name: Show Tag
      id: display
      run: |
        echo "Output from Find Tag: ${GIT_TAG}"
        
    - name: Zip up examples
      run: |
        mkdir dist
        cd docs
        zip -r cytoflow-${GIT_TAG}-examples-basic.zip examples-basic
        zip -r cytoflow-${GIT_TAG}-examples-advanced.zip examples-advanced
        mv cytoflow-${GIT_TAG}-examples-*.zip ../dist
        cd ..
        
    - name: List dist/
      run: ls dist/
      
    - name: Save the contents of the dist/ folder as artifacts
      uses: actions/upload-artifact@v4.3.6
      with:
        name: examples
        retention-days: 7
        path: dist/*
        
