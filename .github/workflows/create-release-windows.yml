# (c) Massachusetts Institute of Technology 2015-2018
# (c) Brian Teague 2018-2022
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 2 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

name: Release a new package (Windows)
on:
  repository_dispatch:
    types: [create-release-builds]
    
jobs:     
  build-windows-conda-package:
    name: Build windows conda package
    runs-on: windows-2022
    defaults:
      run:
        shell: bash -l {0}
    steps:
    - name: Check out repo
      uses: actions/checkout@v4.1.7
      with:
        ref: ${{ github.event.client_payload.ref }}
        fetch-depth: 0
        submodules: true
        
    - name: Query git tag
      id: tag
      run: echo "GIT_TAG=$(git describe --tags)" >> $GITHUB_ENV
        
    - name: Show Tag
      id: display
      run: |
        echo "Output from Find Tag: ${GIT_TAG}"
        
    - name: Remove nomkl
      run: |
        sed -i '/nomkl/d' environment.yml
      
    - name: Setup Miniconda
      uses: conda-incubator/setup-miniconda@v3.1.0
      with:
        auto-update-conda: true
        channels: cytoflow
        activate-environment: cytoflow
        environment-file: environment.yml
                
    - name: Configure conda
      run: |
        conda install --yes --quiet swig==4.0.2 anaconda-client conda-build conda-verify
        
    - name: Build conda package
      run: |
        conda render package/conda_recipes/cytoflow
        conda build --quiet package/conda_recipes/cytoflow
        
    - name: Move conda package into the dist folder
      run: |
        mkdir dist
        mv `conda build --output package/conda_recipes/cytoflow/` dist

    - name: List dist
      run: ls dist/
      
    - name: Get file names
      id: get_filenames
      run: |
        cd dist
        echo "CONDA_PACKAGE=$(ls cytoflow*.conda)" >> $GITHUB_ENV 

    - name: Show file name
      run: |
        echo 'Output from get_filename: ${CONDA_PACKAGE}'
         
#     - name: Upload the conda package to the GitHub release
#       uses: actions/upload-release-asset@v1
#       env:
#         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#       with:
#         upload_url: ${{ github.event.client_payload.release_url }} 
#         asset_path: dist/${CONDA_PACKAGE}
#         asset_name: cytoflow-conda-${GIT_TAG}-win-amd64.tar.bz2
#         asset_content_type: application/x-bzip2
         
    - name: Upload the conda package to anaconda.org
      run: |
        anaconda login --username ${{ secrets.CONDA_USERNAME }} --password ${{ secrets.CONDA_PASSWORD }}
        anaconda upload --user cytoflow dist/$CONDA_PACKAGE
        anaconda logout
        

  build-windows-wheels:
    name: Build windows wheel, extension
    runs-on: windows-2022
    defaults:
      run:
        shell: bash -l {0}
    steps:
    - name: Check out repo
      uses: actions/checkout@v4.1.7  
      with:
        ref: ${{ github.event.client_payload.ref }}
        fetch-depth: 0
        submodules: true
        
    - name: Remove nomkl
      run: |
        sed -i '/nomkl/d' environment.yml
      
    - name: Setup Miniconda
      uses: conda-incubator/setup-miniconda@v3.1.0
      with:
        auto-update-conda: true
        channels: cytoflow
        activate-environment: cytoflow
        environment-file: environment.yml
         
    - name: Configure conda
      run: |
        conda install --yes --quiet swig==4.0.2 pip
    
    - name: Install packaging deps
      run: |
        pip install build
    
    - name: Install package locally
      run: |
        pip install --editable .
        
    - name: Reset git
      run: |
        git reset --hard
        
    - name: Build wheel
      run: |
        python -m build --wheel
        
    - name: Move C++ extensions into the dist folder
      run: |
        cp `find build | grep "\.pyd$"` dist/
        
    - name: List dist
      run: ls dist/
      
    - name: Get file names
      id: get_filenames
      run: |
        cd dist
        echo "EXTENSION_FILE=$(ls _Logicle*.pyd)" >> $GITHUB_OUTPUT
        echo "WHEEL_FILE=$(ls cytoflow*.whl)" >> $GITHUB_OUTPUT

    - name: Upload the Windows extension to the GitHub release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.client_payload.release_url }} 
        asset_path: dist/${{ steps.get_filenames.outputs.EXTENSION_FILE }}
        asset_name: ${{ steps.get_filenames.outputs.EXTENSION_FILE }}
        asset_content_type: application/x-ms-dos-executable
 
    - name: Upload the Windows wheel to the GitHub release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.client_payload.release_url }} 
        asset_path: dist/${{ steps.get_filenames.outputs.WHEEL_FILE }}
        asset_name: ${{ steps.get_filenames.outputs.WHEEL_FILE }}
        asset_content_type: application/zip    
        
  build-windows-oneclick:
    name: Build Windows one-click
    runs-on: windows-2022
    defaults:
      run:
        shell: bash -l {0}
    steps:        
    - name: Check out repo
      uses: actions/checkout@v4.1.7  
      with:
        ref: ${{ github.event.client_payload.ref }}
        fetch-depth: 0
        submodules: true
        
    - name: Show all the files
      run: find .
      
    - name: Query git tag
      id: tag
      run: echo "GIT_TAG=$(git describe --tags)" >> $GITHUB_ENV
        
    - name: Show Tag
      id: display
      run: |
        echo "Output from Find Tag: ${GIT_TAG}"
        
    - name: Remove nomkl
      run: |
        sed -i '/nomkl/d' environment.yml
      
    - name: Setup Miniconda
      uses: conda-incubator/setup-miniconda@v3.1.0
      with:
        auto-update-conda: true
        channels: cytoflow
        activate-environment: cytoflow
        environment-file: environment.yml
         
    - name: Configure conda
      run: |
        conda install --yes --quiet swig==4.0.2
            
    - name: Install package locally
      run: |
        pip install --editable .
        
    - name: Install packaging deps
      run: |
        conda install --yes --quiet 'sphinx==7.3.7' pandoc
        pip install "pyinstaller==6.12.0"
        
    - name: Build embedded help docs
      run: |
        sphinx-build docs/user_manual/reference cytoflowgui/help
        
    - name: Build GUI binary
      run: |
        pyinstaller package/pyinstaller.spec
        
    - name: Build installer
      run: |
        "C:\Program Files (x86)\NSIS\makensis.exe" //NOCD package/installer.nsis
        
    - name: Rename installer and remove remaining files
      id: rename_installer
      run: |
        cd dist
        mv cytoflow-installer.exe cytoflow-gui-${GIT_TAG}-win_x86-64.exe
        echo "GUI_FILE=cytoflow-gui-${GIT_TAG}-win_x86-64.exe" >> $GITHUB_OUTPUT
        rm -rf cytoflow
        
    - name: List dist
      run: ls dist/
      
    - name: Upload the point-and-click tarball to the GitHub release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.client_payload.release_url }} 
        asset_path: dist/${{ steps.rename_installer.outputs.GUI_FILE }}
        asset_name: ${{ steps.rename_installer.outputs.GUI_FILE }}
        asset_content_type: application/x-ms-dos-executable

