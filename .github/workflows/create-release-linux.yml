# (c) Massachusetts Institute of Technology 2015-2018
# (c) Brian Teague 2018-2021
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 2 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

name: Release a new package (Linux)
on:
  repository_dispatch:
    types: [builds]
      
jobs:
  build-linux-conda-package:
    name: Build and upload the linux conda package
    runs-on: ubuntu-18.04
    defaults:
      run:
        shell: bash -l {0}
    steps:
    - name: Check out repo
      uses: actions/checkout@v2
      with:
        ref: ${{ github.event.client_payload.ref }}
        fetch-depth: 0
      
    - name: Query git tag
      id: tag
      run: echo "::set-output name=tag::$(git describe --tags)"
        
    - name: Show Tag
      id: display
      run: |
        echo 'Output from Find Tag: ${{steps.tag.outputs.tag}}'
       
    - name: Setup Miniconda
      uses: conda-incubator/setup-miniconda@v2.0.1
      with:
        activate-environment: cytoflow
        environment-file: environment.yml
         
    - name: Configure conda
      run: |
        conda install --yes --quiet swig==4.0.2 anaconda-client conda-build
         
    - name: Build conda package
      run: |
        conda render package/conda_recipes/cytoflow
        conda build --quiet package/conda_recipes/cytoflow
         
    - name: Move conda package into the dist folder
      run: |
        mkdir dist
        python package/move_conda_package.py
        
    - name: List dist/
      run: ls dist/
      
    - name: Get file names
      id: get_filenames
      run: |
        cd dist
        echo "::set-output name=conda_package::$(ls cytoflow*.bz2)"        

    - name: Show file name
      run: |
        echo 'Output from get_filename: ${{steps.get_filenames.outputs.conda_package}}'
        
    - name: Upload the conda package to the GitHub release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.client_payload.release_url }} 
        asset_path: dist/${{ steps.get_filenames.outputs.conda_package }}
        asset_name: cytoflow-conda-${{ steps.tag.outputs.tag }}-linux_x86-64.tar.bz2
        asset_content_type: application/x-bzip2
        
    - name: Upload the conda package to anaconda.org
      run: |
        anaconda login --username ${{ secrets.CONDA_USERNAME }} --password ${{ secrets.CONDA_PASSWORD }}
        anaconda upload --user cytoflow dist/${{ steps.get_filenames.outputs.conda_package }}
        anaconda logout
       
  build-linux-wheels:
    name: Build and upload source dist, linux wheels
    runs-on: ubuntu-18.04
    defaults:
      run:
        shell: bash -l {0}
    steps:
    - name: Check out repo
      uses: actions/checkout@v2  
      with:
        ref: ${{ github.event.client_payload.ref }}
        fetch-depth: 0
      
    - name: Setup Miniconda
      uses: conda-incubator/setup-miniconda@v2.0.1
      with:
        activate-environment: cytoflow
        environment-file: environment.yml
        
    - name: Configure conda
      run: |
        conda install --yes --quiet swig==4.0.2
    
    - name: Install package locally
      run: |
        python setup.py build_ext --inplace
        
    - name: Build source dist
      run: |
        python setup.py sdist
        
    - name: Build wheel
      run: |
        python setup.py bdist_wheel
        
    - name: Move C++ extensions into the dist folder
      run: |
        cp `find build | grep "\.so$"` dist/
        
    - name: List dist/
      run: ls dist/
      
    - name: Get file names
      id: get_filenames
      run: |
        cd dist
        echo "::set-output name=extension::$(ls _Logicle*.so)"
        echo "::set-output name=wheel::$(ls cytoflow*.whl)"
        echo "::set-output name=tarball::$(ls cytoflow*.tar.gz)"
 
    - name: Upload the Linux extension to the GitHub release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.client_payload.release_url }} 
        asset_path: dist/${{ steps.get_filenames.outputs.extension }}
        asset_name: ${{ steps.get_filenames.outputs.extension }}
        asset_content_type: application/x-sharedlib
 
    - name: Upload the Linux wheel to the GitHub release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.client_payload.release_url }} 
        asset_path: dist/${{ steps.get_filenames.outputs.wheel }}
        asset_name: ${{ steps.get_filenames.outputs.wheel }}
        asset_content_type: application/zip       
 
    - name: Upload the source tarball to the GitHub release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.client_payload.release_url }} 
        asset_path: dist/${{ steps.get_filenames.outputs.tarball }}
        asset_name: ${{ steps.get_filenames.outputs.tarball }}
        asset_content_type: application/x-compressed-tar
        
  build-linux-oneclick:
    name: Build linux one-click
    runs-on: ubuntu-18.04
    defaults:
      run:
        shell: bash -l {0}
    steps:
    - name: Check out repo
      uses: actions/checkout@v2  
      with:
        ref: ${{ github.event.client_payload.ref }}
        fetch-depth: 0
      
    - name: Query git tag
      id: tag
      run: echo "::set-output name=tag::$(git describe --tags)"
        
    - name: Show Tag
      id: display
      run: |
        echo 'Output from Find Tag: ${{steps.tag.outputs.tag}}'
      
    - name: Setup Miniconda
      uses: conda-incubator/setup-miniconda@v2.0.1
      with:
        activate-environment: cytoflow
        environment-file: environment.yml
        
    - name: Configure conda
      run: |
        conda install --yes --quiet swig==4.0.2
    
    - name: Install package locally
      run: |
        python setup.py build_ext --inplace
        
    - name: Install packaging deps
      run: |
        conda install --yes --quiet 'sphinx==3.4.3'
        pip install "pyinstaller==4.2"
        
    - name: Build embedded help docs
      run: |
        python setup.py build_sphinx -b embedded_help
            
    - name: Build GUI binary
      run: |
        pyinstaller package/pyinstaller.spec
        
#    - name: GUI binary smoketest
#      run: |
#        xvfb-run dist/cytoflow/cytoflowgui ../../cytoflowgui/tests/startup-test.flow

    - name: Rename directory and make a tarball
      run: |
        cd dist
        mv cytoflow cytoflow-${{steps.tag.outputs.tag}}
        tar -cjf cytoflow-gui-${{steps.tag.outputs.tag}}.linux_x86-64.tar.bz2 cytoflow-${{steps.tag.outputs.tag}}
        rm -rf cytoflow-${{steps.tag.outputs.tag}}
        
    - name: List dist/
      run: ls dist/
      
    - name: Upload the point-and-click tarball to the GitHub release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.client_payload.release_url }} 
        asset_path: dist/cytoflow-gui-${{steps.tag.outputs.tag}}.linux_x86-64.tar.bz2
        asset_name: cytoflow-gui-${{steps.tag.outputs.tag}}.linux_x86-64.tar.bz2
        asset_content_type: application/x-bzip-compressed-tar
        
        
  build-examples:
    name: Zip up examples
    runs-on: ubuntu-18.04
    steps:
    - name: Show client payload
      run: |
        echo "${{ github.event.client_payload.ref }}"
        echo "${{ github.event.client_payload.release_url }}"

    - name: Check out repo
      uses: actions/checkout@v2  
      with:
        ref: ${{ github.event.client_payload.ref }}
        fetch-depth: 0
        submodules: true
      
    - name: Query git tag
      id: tag
      run: echo "::set-output name=tag::$(git describe --tags)"
        
    - name: Show Tag
      id: display
      run: |
        echo 'Output from Find Tag: ${{steps.tag.outputs.tag}}'
        
    - name: Zip up examples
      run: |
        mkdir dist
        cd docs
        zip -r cytoflow-${{steps.tag.outputs.tag}}-examples-basic.zip examples-basic
        zip -r cytoflow-${{steps.tag.outputs.tag}}-examples-advanced.zip examples-advanced
        mv cytoflow-${{steps.tag.outputs.tag}}-examples-*.zip ../dist
        cd ..
        
    - name: List dist/
      run: ls dist/
      
    - name: Upload the the basic examples to the GitHub release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.client_payload.release_url }} 
        asset_path: dist/cytoflow-${{steps.tag.outputs.tag}}-examples-basic.zip
        asset_name: cytoflow-${{steps.tag.outputs.tag}}-examples-basic.zip
        asset_content_type: application/zip
        
    - name: Upload the the advanced examples to the GitHub release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.client_payload.release_url }} 
        asset_path: dist/cytoflow-${{steps.tag.outputs.tag}}-examples-advanced.zip
        asset_name: cytoflow-${{steps.tag.outputs.tag}}-examples-advanced.zip
        asset_content_type: application/zip

        
